"""Add plugs table for targets and contacts

Revision ID: bfc48fb8c720
Revises: 67675ca9c4f3
Create Date: 2025-09-23 11:48:47.611636

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'bfc48fb8c720'
down_revision = '67675ca9c4f3'
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('plugs',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('plug_type', sa.Enum('TARGET', 'CONTACT', name='plugtype'), nullable=False),
    sa.Column('first_name', sa.String(length=32), nullable=False),
    sa.Column('last_name', sa.String(length=32), nullable=False),
    sa.Column('job_title', sa.String(length=64), nullable=True),
    sa.Column('profile_picture', sa.String(length=500), nullable=True),
    sa.Column('company', sa.String(length=64), nullable=True),
    sa.Column('email', sa.String(length=64), nullable=True),
    sa.Column('primary_number', sa.String(length=18), nullable=True),
    sa.Column('secondary_number', sa.String(length=18), nullable=True),
    sa.Column('linkedin_url', sa.String(length=255), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('network_type', sa.Enum('NEW_CLIENT', 'EXISTING_CLIENT', 'NEW_PARTNERSHIP', 'EXISTING_PARTNERSHIP', 'VENDOR', 'INVESTOR', 'MENTOR', 'OTHER', name='networktype'), nullable=True),
    sa.Column('business_type', sa.Enum('BIOTECH', 'DIRECT_CARE', 'PHARMACEUTICALS', 'MEDICAL_DEVICES', 'HEALTH_TECH', 'HOSPITAL_HEALTH_SYSTEM', 'CRO', 'OTHER', name='businesstype'), nullable=True),
    sa.Column('connect_reason', sa.Text(), nullable=True),
    sa.Column('tags', postgresql.ARRAY(sa.String()), nullable=True),
    sa.Column('priority', sa.Enum('LOW', 'MEDIUM', 'HIGH', 'URGENT', name='priority'), nullable=True),
    sa.Column('is_contact', sa.Boolean(), nullable=False),
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('is_deleted', sa.Boolean(), nullable=False),
    sa.Column('deleted_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_plugs_created_at'), 'plugs', ['created_at'], unique=False)
    op.create_index(op.f('ix_plugs_deleted_at'), 'plugs', ['deleted_at'], unique=False)
    op.create_index(op.f('ix_plugs_id'), 'plugs', ['id'], unique=False)
    op.create_index(op.f('ix_plugs_is_deleted'), 'plugs', ['is_deleted'], unique=False)
    op.create_index(op.f('ix_plugs_plug_type'), 'plugs', ['plug_type'], unique=False)
    op.create_index(op.f('ix_plugs_updated_at'), 'plugs', ['updated_at'], unique=False)
    op.create_index(op.f('ix_plugs_user_id'), 'plugs', ['user_id'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_plugs_user_id'), table_name='plugs')
    op.drop_index(op.f('ix_plugs_updated_at'), table_name='plugs')
    op.drop_index(op.f('ix_plugs_plug_type'), table_name='plugs')
    op.drop_index(op.f('ix_plugs_is_deleted'), table_name='plugs')
    op.drop_index(op.f('ix_plugs_id'), table_name='plugs')
    op.drop_index(op.f('ix_plugs_deleted_at'), table_name='plugs')
    op.drop_index(op.f('ix_plugs_created_at'), table_name='plugs')
    op.drop_table('plugs')
    # ### end Alembic commands ###
